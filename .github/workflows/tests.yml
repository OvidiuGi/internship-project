name: TestWorkflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  testing-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Setup PHP
      - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
        with:
          php-version: '7.4'
      - uses: actions/checkout@v2
                - name: Copy .env.test.local
                run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
                  - name: Cache Composer packages
                    id: composer-cache
                    uses: actions/cache@v2
                    with:
                      path: vendor
                      key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                      restore-keys: |
                        ${{ runner.os }}-php-
                  - name: Install Dependencies
                    run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
                  - name: Create Database
                    run: |
                      mkdir -p data
                      touch data/database.sqlite
      - name: Generate code coverage
        run: vendor/bin/phpunit --coverage-clover ./coverage.xml
      - name: Check test coverage
        id: test-coverage
        uses: johanvanhelden/gha-clover-test-coverage-check@v1
        with:
          percentage: "15"
          filename: "coverage.xml"
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Print branch name
        shell: bash
        run: echo ${{ steps.extract_branch.outputs.branch }}
      - name: Create directories for reports
        uses: appleboy/ssh-action@master
        env:
          BRANCH: ${{ steps.extract_branch.outputs.branch }}
          FILES_PATH: ${{ secrets.GA_FILES_PATH }}
        with:
          envs: BRANCH,FILES_PATH
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ''
          script: mkdir -p $FILES_PATH/$BRANCH/coverage
      - name: Uploads reports to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          passphrase: ''
          rm: true
          source: "coverage"
          target: ${{ secrets.GA_FILES_PATH }}/${{ steps.extract_branch.outputs.branch }}/coverage